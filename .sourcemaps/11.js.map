{"version":3,"sources":["../../src/pages/github/github.module.ts","../../src/pages/github/github.ts"],"names":[],"mappings":"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","file":"11.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { GithubPage } from './github';\n\n@NgModule({\n  declarations: [\n    GithubPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(GithubPage),\n  ],\n  exports: [\n    GithubPage\n  ]\n})\nexport class GithubPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/github/github.module.ts","import { Http } from '@angular/http';\nimport { Component } from '@angular/core';\nimport { NavController, NavParams, ToastController, LoadingController, ModalController, IonicPage } from 'ionic-angular';\n\n//gituhb GithubProvider\nimport { GithubProvider } from './../../providers/github/github';\n\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\n\n@IonicPage()\n@Component({\n  selector: 'page-github',\n  templateUrl: 'github.html',\n  })\n  \nexport class GithubPage {\n  noCon: boolean = false;\n  \n  public user = {};\n  repos: any;\n  repodetail: any;\n  public owner = {};\n\n  public loader = this.loadingCtrl.create({\n    content: \"Loading User...\",\n  });\n  \n  constructor(public navCtrl: NavController, public navParams: NavParams, public gitdata: GithubProvider, public http: Http, private toast: ToastController, public loadingCtrl: LoadingController, private iab: InAppBrowser, public modalCtrl: ModalController) {\n    this.loader.present();\n    this.doRefresh(0);\n  }\n\n  doRefresh(refresher) {\n    this.gitdata.getRepo().subscribe(gitdatas => {\n      this.repos = gitdatas;\n    },\n      //handle error  \n      (err) => {\n        this.toast.create({\n          message: `You are offline, please check your internet connection`,\n          showCloseButton: true,\n          closeButtonText: 'Ok'\n        }).present();\n        this.loader.dismiss();\n        this.noCon = true;\n      },\n      //success\n      () => {\n        this.loader.dismiss();\n        this.noCon = false;\n      }\n    )\n    setTimeout(() => {\n      if (refresher != 0)\n        refresher.complete();\n    }, 2000);\n\n    this.gitdata.getUser().subscribe(users => {\n      this.user = users;\n    })\n  }\n\n  repoDetail(reponame: string) {\n    let url = 'https://github.com/mazlanmohdnor/' + reponame;\n    return this.iab.create(url);\n  }\n\n  presentModal() {\n    let modal = this.modalCtrl.create('GithubmodalPage');\n    modal.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/github/github.ts"],"sourceRoot":""}